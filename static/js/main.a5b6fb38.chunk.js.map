{"version":3,"sources":["firebase.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","setCustomParameters","App","state","currentItem","username","items","user","handleChange","bind","handleSubmit","login","logout","event","this","setState","target","name","value","preventDefault","itemRef","database","ref","item","title","displayName","email","push","itemId","remove","signInWithPopup","then","result","signOut","onAuthStateChanged","on","snapshot","val","newState","id","className","onClick","src","photoURL","alt","onSubmit","type","placeholder","readOnly","onChange","map","key","removeItem","aria-hidden","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5b6fb38.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD2bVUnvMYuaRZddo6YpYmImpEQn6KYdEw\",\r\n    authDomain: \"ppp-potluck-party-planner.firebaseapp.com\",\r\n    databaseURL: \"https://ppp-potluck-party-planner.firebaseio.com\",\r\n    projectId: \"ppp-potluck-party-planner\",\r\n    storageBucket: \"ppp-potluck-party-planner.appspot.com\",\r\n    messagingSenderId: \"222519728165\",\r\n    appId: \"1:222519728165:web:0015afb799600f10d687cc\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({\r\n    'prompt': 'select_account'\r\n});\r\n\r\nexport const auth = firebase.auth();\r\n\r\nexport default firebase;\r\n","import React, {Component} from 'react';\nimport './main.css';\nimport firebase, {auth, provider} from \"./firebase\";\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            currentItem: '',\n            username: '',\n            items: [],\n            user: null\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.login = this.login.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const itemRef = firebase.database().ref('items');\n        const item = {\n            title: this.state.currentItem,\n            user: this.state.user.displayName || this.state.user.email,\n        };\n        itemRef.push(item);\n        this.setState({\n            currentItem: '',\n            username: ''\n        });\n    }\n\n    removeItem(itemId) {\n        const itemRef = firebase.database().ref(`/items/${itemId}`);\n        itemRef.remove();\n    }\n\n    login() {\n        auth.signInWithPopup(provider)\n            .then(result => {\n                const user = result.user;\n                this.setState({\n                    user\n                });\n            });\n    }\n\n    logout() {\n        auth.signOut()\n            .then(() => {\n                this.setState({\n                    user: null\n                });\n            });\n    }\n\n    componentDidMount() {\n        //keep user login even when app refreshes\n        auth.onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    user\n                });\n            }\n        });\n        const itemsRef = firebase.database().ref('items');\n        itemsRef.on('value', (snapshot) => {\n            let items = snapshot.val();\n            let newState = [];\n            for (let item in items) {\n                newState.push({\n                    id: item,\n                    title: items[item].title,\n                    user: items[item].user\n                });\n            }\n            this.setState({\n                items: newState\n            });\n        });\n    }\n\n\n    render() {\n        return (\n            <div className='app'>\n                <header>\n                    <div className='wrapper'>\n                        <h1>Potluck Party Planner</h1>\n                        {this.state.user\n                            ?\n                            <button onClick={this.logout}>Log Out</button>\n                            :\n                            <button onClick={this.login}>Log In</button>\n                        }\n                    </div>\n                </header>\n                {this.state.user\n                    ?\n                    <div>\n                        <div>\n                            <div className='user-profile'>\n                                <img src={this.state.user.photoURL} alt='user profile'/>\n                            </div>\n                        </div>\n                        <div className='container'>\n                            <section className='add-item'>\n                                <form onSubmit={this.handleSubmit}>\n                                    <input type=\"text\" name='username' placeholder='Your name?'\n                                           value={this.state.user.displayName || this.state.user.email} readOnly={true} />\n                                    <input type=\"text\" name='currentItem' placeholder='What are you bringing?'\n                                           value={this.state.currentItem} onChange={this.handleChange}/>\n                                    <button>Add Item</button>\n                                </form>\n                            </section>\n                            <section className='display-item'>\n                                <div className=\"wrapper\">\n                                    <ul>\n                                        {this.state.items.map((item) => {\n                                            return (\n                                                <li key={item.id}>\n                                                    <h3>{item.title}</h3>\n                                                    <p>by: {item.user}\n                                                        {item.user === this.state.user.displayName || item.user === this.state.user.email\n                                                            ?\n                                                            <button onClick={() => this.removeItem(item.id)}>\n                                                                <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Remove Item\n                                                            </button>\n                                                            : null}\n                                                    </p>\n                                                </li>\n                                            )\n                                        })}\n                                    </ul>\n                                </div>\n                            </section>\n                        </div>\n                    </div>\n                    :\n                    <div className='wrapper'>\n                        <p>You must be logged in to participate in the event and see status :)</p>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}